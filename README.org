#+TITLE: Jsonnet Language Server

*Warning: This project is in active development and is likely very buggy.*

A *[[https://langserver.org][Language Server Protocol (LSP)]]* server for [[https://jsonnet.org][Jsonnet]].

** Demonstration
   [[https://user-images.githubusercontent.com/4599384/138060166-6ef56086-80c7-4d1a-9bcd-8de59e200b5e.mp4][LSP server demonstration]]

** Features
  - Jump to definition :: For local variables, import and importstr files, and index targets.
  - Workspace symbols :: Return a hierarchy of document symbols representing all desugared nodes of the Jsonnet AST.
  - Diagnostics :: Static errors and warnings of runtime errors.
  - Formatting :: Format document according to default options.

  Refer to [[file:example.jsonnet][example.jsonnet]] for a documented walkthrough.

** Installation
   To install the LSP server with Go into "${GOPATH}"/bin:
   #+NAME: Installation with Go
   #+BEGIN_SRC shell
   go get -u github.com/jdbaldry/jsonnet-language-server
   #+END_SRC

   To download the latest release binary from GitHub:
   #+NAME: Download from GitHub
   #+BEGIN_SRC shell
   curl -Lo jsonnet-language-server https://github.com/jdbaldry/jsonnet-language-server/releases/latest/download/jsonnet-language-server
   #+END_SRC

   #+RESULTS: Download from GitHub

** Editor integration

*** Emacs
   Refer to [[file:editor/jsonnet-language-server.el][editor/jsonnet-language-server.el]] for an example of enabling the LSP server with lsp-mode.

*** [[https://github.com/VSCodium/vscodium][VSCodium]] / VSCode
   The client is not yet published as a plugin. You can use it with these following steps:
   1. Build/install or download the jsonnet language server
   2. Build the vscode client (~npm run compile~ or ~npm run watch~ in the [[file:editor/vscode-client][vscode-client dir]])
   3. Run vscode with following command: ~code <path_to_jsonnet> --extensionDevelopmentPath=<path_to_vscode_client>~